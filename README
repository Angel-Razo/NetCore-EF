Data Base

1.-Create Base Base

create DataBase CrudNetCore
go
use CrudNetCore
CREATE table TB_Login
(Id_Usuario int identity(1,1) primary key,
Usuario nvarchar(36) not null,
Contrasena nvarchar(100) not null)

create  table Tb_Alumnos
(Id_Alumno int identity(1,1) primary key,
Nombre nvarchar(100) not null,
Grado int not null,
Sexo nvarchar(15) not null)

Code
 1.-Create a Solutio in Blank in Visual Studio 2019
 2.-Add New solution .net Core web by web Api
 2.0 Create a folder called Models
 2.1 Install Microsoft.EntityFrameworkCore.Tools
 2.2 install Microsoft.EntityFrameworkCore.SQLServer
 2.3 install Microsoft.EntityFrameworkCore
 2.4 Open Nuget cosole and excecute scaffold-DBContext "Server=localHost; User ID=Sa; Initial Catalog=CrudNetcore; Password=********;" Microsoft.EntityFrameworkCore.SqlServer -OutputDir Models
 Create new class for will be use request
 
namespace NetCore.WebApi.Models.Request
{
    public class AlumnoRequest
    {
        public int Id_Alumno { get; set; }
        public int Grado { get; set; }
        public string Nombre { get; set; }
        public string Sexo { get; set; }
    }
}

 Create new Controller
 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;

namespace NetCore.WebApi.Models
{
    [Route("api/[controller]")]
    [ApiController]
    public class AlumnoController : ControllerBase
    {
        [HttpGet]
        public ActionResult get()
        {
            using (Models.CrudNetcoreContext dbo = new Models.CrudNetcoreContext())
            {
                var lst = (from D in dbo.TbAlumnos
                           select D).ToList();
                return Ok(lst);
            }
        }

        [HttpPost]
        public ActionResult post([FromBody] Models.Request.AlumnoRequest model)
        {
            using (CrudNetcoreContext dbo = new CrudNetcoreContext())
            {
                Models.TbAlumnos OAlumno = new TbAlumnos();
                OAlumno.Nombre = model.Nombre;
                OAlumno.Sexo = model.Sexo;
                OAlumno.Grado = model.Grado;

                dbo.TbAlumnos.Add(OAlumno);
                dbo.SaveChanges();

            }

            return Ok();
        }
        [HttpPut]
        public ActionResult put([FromBody] Models.Request.AlumnoRequest model)
        {
            string mesage = string.Empty;
            using (CrudNetcoreContext dbo = new CrudNetcoreContext())
            {
                Models.TbAlumnos OAlumno = dbo.TbAlumnos.Find(model.Id_Alumno);
                if (OAlumno != null)
                {
                    //OAlumno.IdAlumno = model.Id_Alumno;
                    OAlumno.Nombre = model.Nombre;
                    OAlumno.Sexo = model.Sexo;
                    OAlumno.Grado = model.Grado;

                    dbo.Entry(OAlumno).State = Microsoft.EntityFrameworkCore.EntityState.Modified;
                    dbo.SaveChanges();
                    mesage = "Actualizacion Correcta";
                }
                else
                {
                    mesage = "Error Al Actualizar";
                }
             
            }

            return Ok(mesage );
        }
        [HttpDelete]

        public ActionResult delete([FromBody] Request.AlumnoRequest model)
        {
            using(CrudNetcoreContext db=new CrudNetcoreContext())
            {
                TbAlumnos tbAlumnos = db.TbAlumnos.Find(model.Id_Alumno);

                db.TbAlumnos.Remove(tbAlumnos);
                db.SaveChanges();
            }
            return Ok();
        }

    }
}
 
 
 Testing
 
 
